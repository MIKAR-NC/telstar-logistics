@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a id="register" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a id="login" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>

<script>

function getLangCookie() {
  const value = `; ${document.cookie}`;
  const parts = value.split(`; ${"lang"}=`);
  if (parts.length === 2) return parts.pop().split(';').shift();
}

var checkCookie = function() {

    return function() {
        var language = getLangCookie();
        let registerText = "Register"
        let loginText = "Login"
        if (language === "fr") {
            registerText = "S'inscrire"
            loginText = "Login"
        }
        $("#register").text(registerText);
        $("#login").text(loginText);
    };
}();

window.setInterval(checkCookie, 100); // run every 100 ms
</script>